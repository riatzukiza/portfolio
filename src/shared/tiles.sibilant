
(require! (lit Spawnable) "@shared/data-structures/spawnable.js"
          (lit Trie) "@shared/data-structures/trees/trie.js"
          (lit Entity-group) "@shared/ecs.js"
          (lit Position) "@shared/systems/position.js"
          (lit Physics) "@shared/systems/physics/system.js"
          )
(define Tile-node Spawnable
  (init (*x *y entity graph )
        (set entity.position-interface
             'x (* this.graph.tile-size *x)
             'y (* this.graph.tile-size *y)
             )
        (.setup this *x *y))
  (def setup ()
    (throw (new Error "No tile setup function defined")))
  (gett world-pos this.entity.position-interface)
  (gett x this.*x)
  (gett y this.*y)


  (gett world-x this.pos.x)
  (gett world-y this.pos.y)

  (gett tile-size this.graph.tile-size)

  (gett north (.get graph this.x this.y))
  (gett south (.get graph this.x this.y))
  (gett east  (.get graph this.x this.y))
  (gett west (.get graph this.x this.y))

  (gett north-east (.get graph (+ this.x 1) (+ this.y 1)))
  (gett north-west (.get graph (- this.x 1) (+ this.y 1)))
  (gett south-east (.get graph (+ this.x 1) (- this.y 1)))
  (gett south-west (.get graph (- this.x 1) (- this.y 1)))
  (gett edges [this.north
                 this.south
                 this.east
                 this.west
                 this.north-east
                 this.north-west

                 this.south-east
                 this.south-west])
  )
(export Tile-node)
(define Tile-graph Spawnable
  (init ((tile-size 30)
         (tile-properties [])
         game
         (trie (.spawn Trie))
         (tile-entities ((create Entity-group)
                         "tiles"
                         [Position Physics ...tile-properties ]
                         game.ent))))

  (def get-closest-from-world-pos (x y)
    (.get this (Math.round (/ x this.tile-size))
          (Math.round (/ y this.tile-size))))
  (def get (x y)
    (if (.has this.trie [x y])
        (.get this.trie [x y])
        (do (const entity (.spawn this.tile-entities))
            (assign entity.physical-properties.scale (-  this.tile-size 2))
            (const tile (.spawn Tile-node x y entity this))
          (set tile 'x x 'y y)
          (.set this.trie [x y] tile)))))

(export Tile-graph)
