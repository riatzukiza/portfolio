(require! (lit Ant-dots) "@obstacles/systems/ants/ant-dot.js"
          (lit Ant-trails) "@obstacles/systems/ants/ant-trails.js"
          (lit Ant-life-timer) "@obstacles/systems/ants/ant-life-timer.js"
          (lit Position) "@obstacles/systems/position.js"
          (lit Velocity) "@obstacles/systems/velocity.js"
          (lit Physics) "@shared/systems/physics/index.js"
          (lit  Entity-group) "@shared/ecs.js"
          (lit Collision place-entity) "@shared/systems/collision.js"
          (lit game active-game-systems) "@obstacles/game.js"
          (lit Ant-panel) "@obstacles/systems/ants/ant-panel.js"
          config "@obstacles/config.js")

(const ants ((create Entity-group)
             "Ants"
             [Collision
              Ant-dots
              Ant-panel
              Physics
              Velocity
              Position
              Ant-trails
              Ant-life-timer
              ]
             game.ent))
(def clear-ants () (.clear ants))
(def spawn-ant ([x, y], home, starting-life)
  (var ant (.spawn ants))


  (set (.get game.systems Position ant )
       'x x
       'y y
       'z 0)

  (set (.get game.systems Physics ant)
       'scale 1
       'mass 1
       'forces [SignalField Friction])

  (var v (.get game.systems Velocity ant))

  (if (not (= config.spawn-static 0))
      (.accelerate v [(+ 1 (random-signed config.spawn-static)),
                      (+ 1 (random-signed config.spawn-static))]))


  (place-entity ant game config))

(export spawn-ant)
(export clear-ants)
(export ants)
(require! (lit Friction Signal-field) "@obstacles/forces.js")
