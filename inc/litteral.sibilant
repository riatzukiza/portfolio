
(def-lit-macro def-curried (name args ...body)
  `(property @name (R.curry (lambda @args ...@body))))

(def-lit-macro define (name parent ...body)
               `(property @name
                          (.define @parent (quote @name)
                                   (lit ...@body))))

(def-lit-macro cached (name ...rest)
  `(gett @name (if (get this (quote (quote @['* name])))
                   (get this (quote (quote @['* name])))
                   (set this (quote (quote @['* name]))
                        (scoped ...@rest)))))
